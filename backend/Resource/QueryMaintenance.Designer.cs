//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediHubAPI.Resource {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class QueryMaintenance {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal QueryMaintenance() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MediHubAPI.Resource.QueryMaintenance", typeof(QueryMaintenance).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	COUNT(CASE
        ///		WHEN (DM.TYPE like &apos;%Water Seepage%&apos;
        ///			OR DM.TYPE LIKE &apos;%Leakage%&apos;) THEN 1
        ///		ELSE NULL
        ///	END) AS TOTALWATERSEEPAGESLEAKAGESUNITS,
        ///	COUNT(CASE
        ///		WHEN DM.TYPE like &apos;%Chokage%&apos; THEN 1
        ///		ELSE NULL
        ///	END) AS TOTLACHOKAGEUNITS
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON M.ID = DM.MAINTENANCE_ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQL;
        ///
        ///SELECT SUM(MM.CHOKAGE_UNIT_COMPLETED) AS CHOKAGE_UNIT_COMPLETED,
        ///	S [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DetailDLPProjectSeepagesChokage {
            get {
                return ResourceManager.GetString("DetailDLPProjectSeepagesChokage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT M.PROJECT_ID,
        ///	SUM(M.PROJECT_TOTAL_UNITS) AS PROJECT_TOTAL_UNITS,
        ///	SUM(MM.UNITS_PURCHASER_COLLECTED_KEYS) AS TOTAL_UNITS_PURCHASER_COLLECTED_KEYS,
        ///	SUM(MM.UNITS_MOVED_IN) AS UNITS_MOVED_IN
        ///FROM MAINTENANCE M
        ///LEFT JOIN MAINTENANCE_MONTHLY MM ON M.ID = MM.MAINTENANCE_ID
        ///WHERE @WHERESQL
        ///GROUP BY M.PROJECT_ID;
        ///
        ///
        ///SELECT COUNT(CM.ID) AS DEFECTS_CASES_NOT_SUBMITTED
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON CM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND CM.IS_DELETED IS  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DLPDetailProjectOverview {
            get {
                return ResourceManager.GetString("DLPDetailProjectOverview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT M.PROJECT_ID,
        ///	SUM(M.PROJECT_TOTAL_UNITS) AS PROJECT_TOTAL_UNITS,
        ///	SUM(MM.UNITS_PURCHASER_COLLECTED_KEYS) AS TOTAL_UNITS_PURCHASER_COLLECTED_KEYS,
        ///	SUM(MM.UNITS_MOVED_IN) AS UNITS_MOVED_IN
        ///FROM MAINTENANCE M
        ///LEFT JOIN MAINTENANCE_MONTHLY MM ON M.ID = MM.MAINTENANCE_ID
        ///WHERE @WHERESQL
        ///GROUP BY M.PROJECT_ID;
        ///
        ///
        ///SELECT COUNT(CM.ID) AS DEFECTS_CASES_NOT_SUBMITTED
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON CM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND CM.IS_DELETED IS  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DLPDetailProjectOverviewCases {
            get {
                return ResourceManager.GetString("DLPDetailProjectOverviewCases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT M.PROJECT_ID,
        ///	SUM(M.PROJECT_TOTAL_UNITS) AS PROJECT_TOTAL_UNITS,
        ///	SUM(MM.UNITS_PURCHASER_COLLECTED_KEYS) AS TOTAL_UNITS_PURCHASER_COLLECTED_KEYS,
        ///	SUM(MM.UNITS_MOVED_IN) AS UNITS_MOVED_IN
        ///FROM MAINTENANCE M
        ///LEFT JOIN MAINTENANCE_MONTHLY MM ON M.ID = MM.MAINTENANCE_ID
        ///WHERE @WHERESQL
        ///GROUP BY M.PROJECT_ID;
        ///
        ///
        ///SELECT COUNT(CM.ID) AS DEFECTS_CASES_NOT_SUBMITTED
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON CM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND CM.IS_DELETED IS  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DLPDetailProjectOverviewDefects {
            get {
                return ResourceManager.GetString("DLPDetailProjectOverviewDefects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT M.PROJECT_ID,
        ///	SUM(M.PROJECT_TOTAL_UNITS) AS PROJECT_TOTAL_UNITS,
        ///	SUM(MM.UNITS_PURCHASER_COLLECTED_KEYS) AS TOTAL_UNITS_PURCHASER_COLLECTED_KEYS,
        ///	SUM(MM.UNITS_MOVED_IN) AS UNITS_MOVED_IN
        ///FROM MAINTENANCE M
        ///LEFT JOIN MAINTENANCE_MONTHLY MM ON M.ID = MM.MAINTENANCE_ID
        ///WHERE @WHERESQL
        ///GROUP BY M.PROJECT_ID;
        ///
        ///
        ///SELECT COUNT(CM.ID) AS DEFECTS_CASES_NOT_SUBMITTED
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON CM.MAINTENANCE_ID = M.ID
        ///WHERE TYPE_WARRANTY = &apos;DLP&apos; AND @WHERESQLCASES AND M.I [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DLPDetailProjectUnitView {
            get {
                return ResourceManager.GetString("DLPDetailProjectUnitView", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DM.STATUS,
        ///	DM.TAG,
        ///	M.PROJECT_NAME,
        ///	COUNT(DM.ID) AS TOTAL_STATUS,
        ///	@STARTWEEK AS STARTWEEK,
        ///	@ENDWEEK AS ENDWEEK
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON M.ID = DM.MAINTENANCE_ID
        ///WHERE 
        ///	(DM.CASE_NUMBER LIKE &apos;%-001-H&apos; OR DM.CASE_NUMBER LIKE &apos;%-001&apos;)
        ///	AND (LOWER(STATUS) LIKE &apos;%wip%&apos; OR LOWER(STATUS) LIKE &apos;%ps%&apos;)
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQL
        ///GROUP BY STATUS,
        ///	DM.TAG,
        ///	M.PROJECT_NAME;.
        /// </summary>
        public static string DLPDetailUnitsOIF1stOutstanding {
            get {
                return ResourceManager.GetString("DLPDetailUnitsOIF1stOutstanding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT STATUS,
        ///	M.PROJECT_NAME,
        ///	COUNT(CM.ID) AS TOTAL_STATUS,
        ///	@STARTWEEK AS StartWeek,
        ///	@ENDWEEK AS EndWeek
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON M.ID = CM.MAINTENANCE_ID
        ///WHERE (CM.CASE_NUMBER LIKE &apos;%-001-H&apos;
        ///	OR CM.CASE_NUMBER LIKE &apos;%-001&apos;)
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQLCASES
        ///GROUP BY STATUS,
        ///	M.PROJECT_NAME;
        ///
        ///SELECT STATUS,
        ///	M.PROJECT_NAME,
        ///	COUNT(DM.ID) AS TOTAL_STATUS,
        ///	@STARTWEEK AS StartWeek,
        ///	@ENDWEEK AS EndWeek
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTE [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DLPDetailUnitsOIF1stOverview {
            get {
                return ResourceManager.GetString("DLPDetailUnitsOIF1stOverview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	EXTRACT(MONTH FROM CM.CREATION_DATE) AS MONTH,
        ///	EXTRACT(YEAR FROM CM.CREATION_DATE) AS YEAR,
        ///	CONCAT(EXTRACT(MONTH FROM CM.CREATION_DATE), &apos;-&apos;, substring(CAST (EXTRACT(YEAR FROM CM.CREATION_DATE) AS VARCHAR) from 3 for 4)) AS DATE_CONCAT,
        ///	STATUS,
        ///	M.PROJECT_NAME,
        ///	COUNT(CM.ID) AS TOTAL_STATUS
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON M.ID = CM.MAINTENANCE_ID
        ///WHERE 
        ///M.IS_DELETED IS NOT TRUE
        ///AND CM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///AND @WHERESQLCASES
        ///AND (CM.C [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DLPDetailUnitsOIF1stTimeLine {
            get {
                return ResourceManager.GetString("DLPDetailUnitsOIF1stTimeLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DM.STATUS,
        ///	DM.TAG,
        ///	M.PROJECT_NAME,
        ///	COUNT(DM.ID) AS TOTAL_STATUS,
        ///	@STARTWEEK AS STARTWEEK,
        ///	@ENDWEEK AS ENDWEEK
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON M.ID = DM.MAINTENANCE_ID
        ///WHERE 
        ///	(DM.CASE_NUMBER NOT LIKE &apos;%-002-H&apos; OR DM.CASE_NUMBER NOT LIKE &apos;%-002&apos;)
        ///	AND (LOWER(STATUS) LIKE &apos;%wip%&apos; OR LOWER(STATUS) LIKE &apos;%ps%&apos;)
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQL
        ///GROUP BY STATUS,
        ///	DM.TAG,
        ///	M.PROJECT_NAME;.
        /// </summary>
        public static string DLPDetailUnitsOIF2ndOutstanding {
            get {
                return ResourceManager.GetString("DLPDetailUnitsOIF2ndOutstanding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT STATUS,
        ///	M.PROJECT_NAME,
        ///	COUNT(CM.ID) AS TOTAL_STATUS,
        ///	@STARTWEEK AS StartWeek,
        ///	@ENDWEEK AS EndWeek
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON M.ID = CM.MAINTENANCE_ID
        ///WHERE (CM.CASE_NUMBER LIKE &apos;%-002-H&apos;
        ///	OR CM.CASE_NUMBER LIKE &apos;%-002&apos;)
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQLCASES
        ///GROUP BY STATUS,
        ///	M.PROJECT_NAME;
        ///
        ///SELECT STATUS,
        ///	M.PROJECT_NAME,
        ///	COUNT(DM.ID) AS TOTAL_STATUS,
        ///	@STARTWEEK AS StartWeek,
        ///	@ENDWEEK AS EndWeek
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTE [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DLPDetailUnitsOIF2ndOverview {
            get {
                return ResourceManager.GetString("DLPDetailUnitsOIF2ndOverview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	EXTRACT(MONTH FROM CM.CREATION_DATE) AS MONTH,
        ///	EXTRACT(YEAR FROM CM.CREATION_DATE) AS YEAR,
        ///	CONCAT(EXTRACT(MONTH FROM CM.CREATION_DATE), &apos;-&apos;, substring(CAST (EXTRACT(YEAR FROM CM.CREATION_DATE) AS VARCHAR) from 3 for 4)) AS DATE_CONCAT,
        ///	STATUS,
        ///	M.PROJECT_NAME,
        ///	COUNT(CM.ID) AS TOTAL_STATUS
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON M.ID = CM.MAINTENANCE_ID
        ///WHERE 
        ///M.IS_DELETED IS NOT TRUE
        ///AND CM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///AND @WHERESQLCASES
        ///AND (CM.C [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DLPDetailUnitsOIF2ndTimeLine {
            get {
                return ResourceManager.GetString("DLPDetailUnitsOIF2ndTimeLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	CONCAT(EXTRACT(MONTH FROM MM.MONTH), &apos;-&apos;,  substring(CAST (EXTRACT(YEAR FROM MM.MONTH) AS VARCHAR) from 3 for 4)) AS MONTH,
        ///	SUM(MM.TOTAL_WORKERS_ON_SITE) AS TOTAL_WORKERS_ON_SITE,
        ///	SUM(MM.TOTAL_WH_WORKERS_ON_SITE) AS TOTAL_WH_WORKERS_ON_SITE
        ///FROM MAINTENANCE_MONTHLY MM
        ///LEFT JOIN MAINTENANCE M ON MM.MAINTENANCE_ID = M.ID
        ///WHERE MM.IS_DELETED IS NOT TRUE
        ///	AND M.IS_DELETED IS NOT TRUE
        ///	AND @WHERESQL
        ///GROUP BY MM.MONTH
        ///ORDER BY MM.MONTH;.
        /// </summary>
        public static string DLPTotalWorkersOnSiteTimeline {
            get {
                return ResourceManager.GetString("DLPTotalWorkersOnSiteTimeline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT M.PROJECT_ID,
        ///	M.PROJECT_NAME,
        ///	COUNT(CM.ID) AS TOTAL_MAINTENANCE
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON CM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND CM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQLCASES
        ///GROUP BY M.PROJECT_ID,
        ///	M.PROJECT_NAME;
        ///	
        ///SELECT M.PROJECT_ID,
        ///	M.PROJECT_NAME,
        ///	COUNT(DM.ID) AS TOTAL_MAINTENANCE
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryDLPTotalCasesDefectsProject {
            get {
                return ResourceManager.GetString("SummaryDLPTotalCasesDefectsProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(CASE WHEN (DM.COMPLETION_DATE::date - DM.CONFIRMATION_DATE::date) &gt; 30 THEN 1 END) AS OVERDUEMORE30DAYS,
        ///	COUNT(CASE WHEN (DM.COMPLETION_DATE::date - DM.CONFIRMATION_DATE::date) BETWEEN 14 AND 30 THEN 1 END) AS OVERDUE14TO30DAYS,
        ///	COUNT(CASE WHEN (DM.COMPLETION_DATE::date - DM.CONFIRMATION_DATE::date) &lt; 14 THEN 1 END) AS OVERDUEONTRACK
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.COMPLETION_DATE &lt;&gt; &apos;infinity&apos;::timest [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryDLPTotalDefectOverdueType {
            get {
                return ResourceManager.GetString("SummaryDLPTotalDefectOverdueType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DM.TAG,
        ///	M.PROJECT_ID,
        ///	M.PROJECT_NAME,
        ///	COUNT(DM.ID) AS TOTALSTATUS
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.COMPLETION_DATE &lt;&gt; &apos;infinity&apos;::timestamp
        ///	AND DM.COMPLETION_DATE &lt;&gt; &apos;-infinity&apos;::timestamp
        ///	AND DM.CONFIRMATION_DATE &lt;&gt; &apos;infinity&apos;::timestamp
        ///	AND DM.CONFIRMATION_DATE &lt;&gt; &apos;-infinity&apos;::timestamp
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND (DM.COMPLETION_DATE::date - DM.CONFIRMATION_DATE [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryDLPTotalDefectOverdueTypeExceeding30Days {
            get {
                return ResourceManager.GetString("SummaryDLPTotalDefectOverdueTypeExceeding30Days", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///CM.*,
        ///M.PROJECT_NAME,
        ///M.PROJECT_ID
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON CM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND CM.SUBMITTED_DATE &lt;&gt; &apos;infinity&apos;::timestamp
        ///	AND CM.SUBMITTED_DATE &lt;&gt; &apos;-infinity&apos;::timestamp
        ///	AND CM.CONFIRMATION_DATE &lt;&gt; &apos;infinity&apos;::timestamp
        ///	AND CM.CONFIRMATION_DATE &lt;&gt; &apos;-infinity&apos;::timestamp
        ///	AND CM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND (CM.SUBMITTED_DATE::date - CM.CONFIRMATION_DATE::date) &gt; 30
        ///	AND @WHERESQLDEFECTS;.
        /// </summary>
        public static string SummaryDLPTotalDefectOverdueTypeExceeding30DaysDetailCases {
            get {
                return ResourceManager.GetString("SummaryDLPTotalDefectOverdueTypeExceeding30DaysDetailCases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///DM.*,
        ///M.PROJECT_NAME,
        ///M.PROJECT_ID
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.COMPLETION_DATE &lt;&gt; &apos;infinity&apos;::timestamp
        ///	AND DM.COMPLETION_DATE &lt;&gt; &apos;-infinity&apos;::timestamp
        ///	AND DM.CONFIRMATION_DATE &lt;&gt; &apos;infinity&apos;::timestamp
        ///	AND DM.CONFIRMATION_DATE &lt;&gt; &apos;-infinity&apos;::timestamp
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND (DM.COMPLETION_DATE::date - DM.CONFIRMATION_DATE::date) &gt; 30
        ///	AND @WHERESQLDEFEC [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryDLPTotalDefectOverdueTypeExceeding30DaysDetailDefects {
            get {
                return ResourceManager.GetString("SummaryDLPTotalDefectOverdueTypeExceeding30DaysDetailDefects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	COUNT(CASE WHEN (DM.CONFIRMATION_DATE::date - DM.TARGET_COMPLETION_DATE::date) &gt; 30 THEN 1 END) AS OVERDUEMORE30DAYS,
        ///	COUNT(CASE WHEN (DM.CONFIRMATION_DATE::date - DM.TARGET_COMPLETION_DATE::date) BETWEEN 14 AND 30 THEN 1 END) AS OVERDUE14TO30DAYS,
        ///	COUNT(CASE WHEN (DM.CONFIRMATION_DATE::date - DM.TARGET_COMPLETION_DATE::date) &lt; 14 THEN 1 END) AS OVERDUEONTRACK,
        ///	@STARTWEEK AS StartWeek,
        ///	@ENDWEEK AS EndWeek
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHE [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryDLPTotalDefectOverdueTypeWeek {
            get {
                return ResourceManager.GetString("SummaryDLPTotalDefectOverdueTypeWeek", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	DM.STATUS,
        ///	COUNT(DM.ID) AS TOTAL_MAINTENANCE
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQLDEFECTS
        ///GROUP BY
        ///	DM.STATUS;.
        /// </summary>
        public static string SummaryDLPTotalDefectsStatues {
            get {
                return ResourceManager.GetString("SummaryDLPTotalDefectsStatues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT M.PROJECT_ID,
        ///	M.PROJECT_NAME,
        ///	DM.STATUS,
        ///	COUNT(DM.ID) AS TOTAL_MAINTENANCE
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQLDEFECTS
        ///GROUP BY M.PROJECT_ID,
        ///	M.PROJECT_NAME,
        ///	DM.STATUS;.
        /// </summary>
        public static string SummaryDLPTotalDefectsStatuesProject {
            get {
                return ResourceManager.GetString("SummaryDLPTotalDefectsStatuesProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT MAX(WORK_START_DATE) AS MAXDATE,
        ///	MIN(WORK_START_DATE) AS MINDATE,
        ///	MAX(TARGET_COMPLETION_DATE) AS EXPECTED_TOP_DATE
        ///FROM CASES_MONITORING DM
        ///WHERE ISFINITE(WORK_START_DATE) = TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND DM.WORK_START_DATE &lt;&gt; &apos;infinity&apos;::timestamp
        ///	AND DM.WORK_START_DATE &lt;&gt; &apos;-infinity&apos;::timestamp
        ///	AND DM.TARGET_COMPLETION_DATE &lt;&gt; &apos;infinity&apos;::timestamp
        ///	AND DM.TARGET_COMPLETION_DATE &lt;&gt; &apos;-infinity&apos;::timestamp
        ///	AND DM.WORK_START_DATE &lt;&gt; &apos;1970-01-01&apos;
        ///	A [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryDLPTotalDefectsStatuesProjectDateTime {
            get {
                return ResourceManager.GetString("SummaryDLPTotalDefectsStatuesProjectDateTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	EXTRACT(MONTH FROM DM.TARGET_COMPLETION_DATE) AS MONTH,
        ///	EXTRACT(YEAR FROM DM.TARGET_COMPLETION_DATE) AS YEAR,
        ///	CONCAT(EXTRACT(MONTH FROM DM.TARGET_COMPLETION_DATE), &apos;-&apos;,  substring(CAST (EXTRACT(YEAR FROM DM.TARGET_COMPLETION_DATE) AS VARCHAR) from 3 for 4)) AS DATE_CONCAT,
        ///	DM.STATUS,
        ///	COUNT(DM.ID) AS TOTAL_MAINTENANCE
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryDLPTotalDefectsStatuestTimeline {
            get {
                return ResourceManager.GetString("SummaryDLPTotalDefectsStatuestTimeline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DM.STATUS AS STATUS,
        ///	COUNT(DM.ID) AS TOTAL_MAINTENANCE
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE LOWER(DESCRIPTION) like LOWER(&apos;%Water Seepage%&apos;)
        ///	AND M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQLDEFECTS
        ///GROUP BY DM.STATUS;
        ///
        ///
        ///SELECT DM.STATUS AS STATUS,
        ///	COUNT(DM.ID) AS TOTAL_MAINTENANCE
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE LOWER(DESCRIPTION)  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryDLPTotalWaterSeepagesChokagesStatus {
            get {
                return ResourceManager.GetString("SummaryDLPTotalWaterSeepagesChokagesStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT *
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON CM.MAINTENANCE_ID = M.ID
        ///WHERE (LOWER(LATEST_COMMENT) like LOWER(&apos;%Water Seepage%&apos;) OR LOWER(LATEST_COMMENT) like LOWER(&apos;%Chokage%&apos;))
        ///	AND M.IS_DELETED IS NOT TRUE
        ///	AND CM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQLDEFECTS;.
        /// </summary>
        public static string SummaryDLPTotalWaterSeepagesChokagesStatusDetailCases {
            get {
                return ResourceManager.GetString("SummaryDLPTotalWaterSeepagesChokagesStatusDetailCases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT *
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE (LOWER(DESCRIPTION) like LOWER(&apos;%Water Seepage%&apos;) OR LOWER(DESCRIPTION) like LOWER(&apos;%Chokage%&apos;))
        ///	AND M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQLDEFECTS;.
        /// </summary>
        public static string SummaryDLPTotalWaterSeepagesChokagesStatusDetailDefects {
            get {
                return ResourceManager.GetString("SummaryDLPTotalWaterSeepagesChokagesStatusDetailDefects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DM.CREATION_DATE,
        ///	COUNT(DM.ID) AS TOTAL
        ///FROM CASES_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE (LOWER(LATEST_COMMENT) like LOWER(&apos;%Water Seepage%&apos;)
        ///							OR LOWER(LATEST_COMMENT) like LOWER(&apos;%Chokage%&apos;))
        ///	AND M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQLDEFECTS
        ///GROUP BY DM.CREATION_DATE
        ///ORDER BY DM.CREATION_DATE;.
        /// </summary>
        public static string SummaryDLPTotalWaterSeepagesChokagesStatusDetailTimeLineCases {
            get {
                return ResourceManager.GetString("SummaryDLPTotalWaterSeepagesChokagesStatusDetailTimeLineCases", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	CONCAT(EXTRACT(MONTH FROM DM.CREATION_DATE), &apos;-&apos;,  substring(CAST (EXTRACT(YEAR FROM DM.CREATION_DATE) AS VARCHAR) from 3 for 4)) AS CREATION_DATE,
        ///	COUNT(DM.ID) AS TOTAL
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE (LOWER(DESCRIPTION) like LOWER(&apos;%Water Seepage%&apos;)
        ///							OR LOWER(DESCRIPTION) like LOWER(&apos;%Chokage%&apos;))
        ///	AND M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND TYPE_WARRANTY = &apos;DLP&apos;
        ///	AND @WHERESQLDEFECTS
        ///GROUP BY DM.CREATION_D [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryDLPTotalWaterSeepagesChokagesStatusDetailTimeLineDefects {
            get {
                return ResourceManager.GetString("SummaryDLPTotalWaterSeepagesChokagesStatusDetailTimeLineDefects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT  MM.MONTH,
        ///	SUM(MM.TOTAL_WORKERS_ON_SITE) AS TOTAL_WORKERS_ON_SITE,
        ///	SUM(MM.TOTAL_WH_WORKERS_ON_SITE) AS TOTAL_WH_WORKERS_ON_SITE
        ///FROM MAINTENANCE_MONTHLY MM
        ///LEFT JOIN MAINTENANCE M ON MM.MAINTENANCE_ID = M.ID
        ///WHERE MM.IS_DELETED IS NOT TRUE
        ///	AND M.IS_DELETED IS NOT TRUE
        ///	AND @WHERESQL
        ///	AND MM.MONTH &gt;= @START_MONTH
        ///	AND MM.MONTH &lt;= @END_MONTH  GROUP BY MM.MONTH ORDER BY MM.MONTH ;.
        /// </summary>
        public static string SummaryDLPTotalWorkersOnSite {
            get {
                return ResourceManager.GetString("SummaryDLPTotalWorkersOnSite", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- DEFECTS OVERVIEW INCOMMING AND OUTGOING
        ///
        ///SELECT COUNT(CASE
        ///			 WHEN DM.CONFIRMATION_DATE &lt;&gt; &apos;infinity&apos;::timestamp
        ///			 AND DM.CONFIRMATION_DATE &lt;&gt; &apos;-infinity&apos;::timestamp
        ///			 AND ((LOWER(DM.STATUS) LIKE &apos;%wip%&apos; OR LOWER(DM.STATUS) LIKE &apos;%ps%&apos;)) THEN 1 END) AS TOTALINCOMING,
        ///	COUNT(CASE
        ///		  WHEN DM.CLOSING_DATE &lt;&gt; &apos;infinity&apos;::timestamp
        ///		  AND DM.CLOSING_DATE &lt;&gt; &apos;-infinity&apos;::timestamp
        ///		  AND LOWER(DM.STATUS) LIKE &apos;%close%&apos; THEN 1 END) AS TOTALOUTGOING
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTEN [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryPostDLPIncomingOutgoing {
            get {
                return ResourceManager.GetString("SummaryPostDLPIncomingOutgoing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT COUNT(DM.ID) AS TOTALSTATUS,
        ///	TYPE AS TYPEMAINTENANCE
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND DM.TYPE_WARRANTY = &apos;PostDLP&apos;
        ///	AND @WHERESQLDEFECTS
        ///GROUP BY TYPE
        ///ORDER BY TOTALSTATUS DESC
        ///LIMIT 10;.
        /// </summary>
        public static string SummaryPostDLPTop10Defects {
            get {
                return ResourceManager.GetString("SummaryPostDLPTop10Defects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DM.STATUS,
        ///	COUNT(DM.ID) AS TOTALSTATUS,
        ///	DM.TYPE AS TYPEMAINTENANCE
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND DM.TYPE_WARRANTY = &apos;PostDLP&apos;
        ///	AND @WHERESQLDEFECTS
        ///GROUP BY DM.STATUS,
        ///	DM.TYPE
        ///ORDER BY TOTALSTATUS DESC;.
        /// </summary>
        public static string SummaryPostDLPTop10DefectsStatus {
            get {
                return ResourceManager.GetString("SummaryPostDLPTop10DefectsStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Total defects
        ///SELECT 
        ///COUNT(DM.ID) AS TOTAL,
        ///@STARTWEEK AS STARTWEEK,
        ///@ENDWEEK AS ENDWEEK
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.TYPE_WARRANTY = &apos;PostDLP&apos;
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND @WHERESQLDEFECTS;
        ///	
        ///-- Total cases
        ///SELECT 
        ///COUNT(CM.ID) AS TOTAL,
        ///@STARTWEEK AS STARTWEEK,
        ///@ENDWEEK AS ENDWEEK
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON CM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        /// [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryPostDLPTotalDefectsCasesOverviewTimeout {
            get {
                return ResourceManager.GetString("SummaryPostDLPTotalDefectsCasesOverviewTimeout", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- Timeline cases
        ///SELECT 
        ///	EXTRACT(MONTH FROM CM.CONFIRMATION_DATE) AS MONTH,
        ///	EXTRACT(YEAR FROM CM.CONFIRMATION_DATE) AS YEAR,
        ///	CONCAT(EXTRACT(MONTH FROM CM.CONFIRMATION_DATE), &apos;-&apos;, substring(CAST (EXTRACT(YEAR FROM CM.CONFIRMATION_DATE) AS VARCHAR) from 3 for 4)) AS DATE_CONCAT,
        ///	COUNT(CM.ID) AS TOTAL
        ///FROM CASES_MONITORING CM
        ///LEFT JOIN MAINTENANCE M ON CM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND CM.CONFIRMATION_DATE &lt;&gt; &apos;infinity&apos;::timestamp
        ///  	AND CM.CONFIRMATION_DATE &lt;&gt; &apos;-infin [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryPostDLPTotalDefectsCasesOverviewTimeoutTimeLine {
            get {
                return ResourceManager.GetString("SummaryPostDLPTotalDefectsCasesOverviewTimeoutTimeLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- overview
        ///
        ///SELECT DM.STATUS,
        ///	COUNT(DM.ID) AS TOTALSTATUS
        ///FROM DEFECTS_MONITORING DM
        ///LEFT JOIN MAINTENANCE M ON DM.MAINTENANCE_ID = M.ID
        ///WHERE M.IS_DELETED IS NOT TRUE
        ///	AND DM.IS_DELETED IS NOT TRUE
        ///	AND DM.TYPE_WARRANTY = &apos;PostDLP&apos;
        ///	AND @WHERESQLDEFECTS
        ///GROUP BY DM.STATUS
        ///ORDER BY DM.STATUS;
        ///
        ///-- timeline
        ///
        ///SELECT DM.STATUS,
        ///	CONCAT(EXTRACT(MONTH FROM DM.CONFIRMATION_DATE), &apos;-&apos;, EXTRACT(YEAR FROM DM.CONFIRMATION_DATE)) AS DATE_CONCAT,
        ///	COUNT(DM.ID) AS TOTALSTATUS
        ///FROM DEFECTS_MONITORING D [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryPostDLPTotalDefectsStatus {
            get {
                return ResourceManager.GetString("SummaryPostDLPTotalDefectsStatus", resourceCulture);
            }
        }
    }
}
