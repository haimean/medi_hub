//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MediHubAPI.Resource {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class QueryDigicheck {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal QueryDigicheck() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MediHubAPI.Resource.QueryDigicheck", typeof(QueryDigicheck).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (WITH RESULT_TMP (PROJECT_ID, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, PROJECTTYPE, MONTH_NAME) as (
        ///	SELECT
        ///		CC.PROJECT_ID,
        ///		COUNT(CASE WHEN CCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		0 AS TOTAL_1ST, -- yes = 
        ///		COUNT(CASE WHEN CCD.CONFORM = 99 THEN 1 END) AS TOTAL_YES, -- yes
        ///		0 AS TOTAL_1PLUS, -- pass at 1st
        ///		&apos;QAQC_COMMON_CHECK&apos; AS PROJECTTYPE,
        ///		&apos;Summary&apos; AS MONTH_NAME
        ///	FROM SUBAPP_CC CC
        ///	LEFT JOIN SUBAPP_CC_CHECKLIST_DETAIL CCD ON CC.ID = CCD.CC_ID
        ///	WHERE CC.IS_DELETED IS NOT T [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CommonQueryDigicheck {
            get {
                return ResourceManager.GetString("CommonQueryDigicheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (WITH RESULT_TMP (PROJECT_ID, FORM_ID, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, PROJECTTYPE, MONTH_NAME) as (
        ///	SELECT
        ///		CRC.PROJECT_ID,
        ///		CRC.FORM_ID,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		COUNT(CASE WHEN CRCD.CONFORM = 99 THEN 1 END) AS TOTAL_1ST, -- yes = 
        ///		0 AS TOTAL_YES,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 1 THEN 1 END) AS TOTAL_1PLUS, -- pass at 1st
        ///		&apos;QAQC_CRITICAL_CHECK&apos; AS PROJECTTYPE,
        ///		&apos;Summary&apos; AS MONTH_NAME
        ///	FROM SUBAPP_CRC CRC
        ///	LEFT JOIN SUBAPP_CRC_CHE [rest of string was truncated]&quot;;.
        /// </summary>
        public static string CriticalQueryDigicheck {
            get {
                return ResourceManager.GetString("CriticalQueryDigicheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	SUM(RESULT_DATA.CASTING_COMPLETED) AS CASTING_COMPLETED,
        ///	SUM(RESULT_DATA.CASTING_READY_DELIVERY) AS CASTING_READY_DELIVERY,
        ///	SUM(RESULT_DATA.FITOUT_SENDING) AS FITOUT_SENDING,
        ///	SUM(RESULT_DATA.PRE_STORAGE_COMPLETE) AS PRE_STORAGE_COMPLETE,
        ///	SUM(RESULT_DATA.ON_SITE_RECEIVE) AS ON_SITE_RECEIVE,
        ///	SUM(RESULT_DATA.ON_SITE_INSTALLED) AS ON_SITE_INSTALLED,
        ///	UPDATED_AT
        ///FROM (SELECT MP.ID,
        ///	MP.NAME,
        ///	MP.VOLUME,
        ///	MP.REBAR_TONNAGE,
        ///	F.GROUP,
        ///	DATE_TRUNC(&apos;month&apos;, MS.UPDATED_AT) AS UPDATED_AT,
        ///	CO [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckPPVCInProgressModules {
            get {
                return ResourceManager.GetString("DigicheckPPVCInProgressModules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_ACTUAL (CASTING_COMPLETED, CASTING_READY_DELIVERY, FITOUT_SENDING, PRE_STORAGE_COMPLETE, ON_SITE_RECEIVE, ON_SITE_INSTALLED, UPDATED_AT) as (
        ///	SELECT
        ///		SUM(RESULT_DATA.CASTING_COMPLETED) AS CASTING_COMPLETED,
        ///		SUM(RESULT_DATA.CASTING_READY_DELIVERY) AS CASTING_READY_DELIVERY,
        ///		SUM(RESULT_DATA.FITOUT_SENDING) AS FITOUT_SENDING,
        ///		SUM(RESULT_DATA.PRE_STORAGE_COMPLETE) AS PRE_STORAGE_COMPLETE,
        ///		SUM(RESULT_DATA.ON_SITE_RECEIVE) AS ON_SITE_RECEIVE,
        ///		SUM(RESULT_DATA.ON_SITE_INSTALLED) AS ON [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckPPVCInProgressModulesIncrease {
            get {
                return ResourceManager.GetString("DigicheckPPVCInProgressModulesIncrease", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_ACTUAL (CASTING_COMPLETED, CASTING_READY_DELIVERY, FITOUT_SENDING, PRE_STORAGE_COMPLETE, ON_SITE_RECEIVE, ON_SITE_INSTALLED, UPDATED_AT) as (
        ///	SELECT
        ///	SUM(RESULT_DATA.CASTING_COMPLETED) AS CASTING_COMPLETED,
        ///	SUM(RESULT_DATA.CASTING_READY_DELIVERY) AS CASTING_READY_DELIVERY,
        ///	SUM(RESULT_DATA.FITOUT_SENDING) AS FITOUT_SENDING,
        ///	SUM(RESULT_DATA.PRE_STORAGE_COMPLETE) AS PRE_STORAGE_COMPLETE,
        ///	SUM(RESULT_DATA.ON_SITE_RECEIVE) AS ON_SITE_RECEIVE,
        ///	SUM(RESULT_DATA.ON_SITE_INSTALLED) AS ON_SITE_ [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckPPVCInProgressModulesIncreaseV2 {
            get {
                return ResourceManager.GetString("DigicheckPPVCInProgressModulesIncreaseV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	SUM(RESULT_DATA.CASTING_COMPLETED) AS CASTING_COMPLETED,
        ///	SUM(RESULT_DATA.CASTING_READY_DELIVERY) AS CASTING_READY_DELIVERY,
        ///	SUM(RESULT_DATA.FITOUT_SENDING) AS FITOUT_SENDING,
        ///	SUM(RESULT_DATA.PRE_STORAGE_COMPLETE) AS PRE_STORAGE_COMPLETE,
        ///	SUM(RESULT_DATA.ON_SITE_RECEIVE) AS ON_SITE_RECEIVE,
        ///	SUM(RESULT_DATA.ON_SITE_INSTALLED) AS ON_SITE_INSTALLED,
        ///	UPDATED_AT
        ///FROM (SELECT MP.ID,
        ///	MP.NAME,
        ///	MP.VOLUME,
        ///	MP.REBAR_TONNAGE,
        ///	DATE_TRUNC(&apos;month&apos;, MS.CREATED_AT) AS UPDATED_AT,
        ///	-- Casting Co [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckPPVCInProgressModulesV2 {
            get {
                return ResourceManager.GetString("DigicheckPPVCInProgressModulesV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT DISTINCT 
        ///	MP.ID, MP.NAME, MP.BLOCK, MP.LEVEL, MP.UNIT, SPLIT_PART(MP.NAME,&apos;-&apos;, 5),
        ///	CASE
        ///		WHEN S.FLOW_ID = @IDFLOWONSITE AND LOWER(FT.NAME) LIKE LOWER(&apos;%PPVC_OnSite_03_PPVC Module Installation%&apos;) THEN &apos;installed&apos;
        ///		WHEN S.FLOW_ID = @IDFLOWONSITE AND (LOWER(FT.NAME) LIKE LOWER(&apos;%OnSite_01_Post-Deilvery%&apos;) OR LOWER(FT.NAME) LIKE LOWER(&apos;%PPVC_OnSite_01_Post-Deilvery%&apos;)) THEN &apos;delivered&apos;
        ///		WHEN S.FLOW_ID = @IDFLOWPRESTORAGE AND (LOWER(FT.NAME) LIKE LOWER(&apos;%PPVC_PSD_Pre-Storage/Delivery Inspection% [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckPPVCProgressTable {
            get {
                return ResourceManager.GetString("DigicheckPPVCProgressTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT MP.BLOCK,
        ///	MP.BLOCK_ID,
        ///	MP.LEVEL,
        ///	MP.LEVEL_ID,
        ///	COUNT(DISTINCT MP.NAME) AS TOTAL_PPVC,
        ///	-- 1. GET CASTING DATA PPVC CASTING S_03_Post Pour/Carcass Completion | S_01_Slab &amp; Wall Reinforcement | S_03_Post Pour/Carcass Completion
        ///	MIN(CASE WHEN S.FLOW_ID = @IDFLOWCASTING AND (LOWER(FT.NAME) LIKE LOWER(&apos;%PPVC_S_01_Slab &amp; Wall Reinforcement%&apos;)) THEN (MS.DUE_DATE) END) AS START_DATE_CASTING,
        ///	MAX(CASE WHEN S.FLOW_ID = @IDFLOWCASTING AND (LOWER(FT.NAME) LIKE LOWER(&apos;%PPVC_S_03_Post Pour/Carcass comp [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckPPVCProgressTableUnit {
            get {
                return ResourceManager.GetString("DigicheckPPVCProgressTableUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT SUM(CASE WHEN LOWER(RESULT_QUERY.GROUP) LIKE &apos;%casting%&apos; THEN RESULT_QUERY.VOLUME ELSE 0 END) AS TOTAL_VOLUME_CASTING_COMPLETED,
        ///	SUM(RESULT_QUERY.VOLUME) AS TOTAL_VOLUMES,
        ///	SUM(RESULT_QUERY.REBAR_TONNAGE) AS TOTAL_REBAR_TONNAGE,
        ///	SUM(CASE WHEN LOWER(RESULT_QUERY.GROUP) LIKE &apos;%casting%&apos; THEN RESULT_QUERY.REBAR_TONNAGE ELSE 0 END) AS TOTAL_TOTAL_REBAR_TONNAGE_CASTING_COMPLETED
        ///FROM
        ///	(SELECT MP.ID,
        ///			MP.NAME,
        ///			MP.VOLUME,
        ///			MP.REBAR_TONNAGE,
        ///			F.GROUP,
        ///			 COUNT( CASE WHEN (LOWER(FT.NAME) [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckPPVCTotalM3Rebar {
            get {
                return ResourceManager.GetString("DigicheckPPVCTotalM3Rebar", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- DigicheckPPVCTotalM3RebarV2
        ///SELECT 
        ///	SUM(CASE WHEN LOWER(RESULT_QUERY.GROUP) LIKE &apos;%casting%&apos; THEN RESULT_QUERY.VOLUME ELSE 0 END) AS TOTAL_VOLUME_CASTING_COMPLETED,
        ///	SUM(RESULT_QUERY.VOLUME) AS TOTAL_VOLUMES,
        ///	SUM(RESULT_QUERY.REBAR_TONNAGE) AS TOTAL_REBAR_TONNAGE,
        ///	SUM(CASE WHEN LOWER(RESULT_QUERY.GROUP) LIKE &apos;%casting%&apos; THEN RESULT_QUERY.REBAR_TONNAGE ELSE 0 END) AS TOTAL_TOTAL_REBAR_TONNAGE_CASTING_COMPLETED
        ///FROM
        ///	(SELECT MP.ID,
        ///			MP.NAME,
        ///			MP.VOLUME,
        ///			MP.REBAR_TONNAGE,
        ///			F.GROUP,
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckPPVCTotalM3RebarV2 {
            get {
                return ResourceManager.GetString("DigicheckPPVCTotalM3RebarV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT
        ///	COUNT( CASE WHEN (LOWER(FT.NAME) LIKE LOWER(&apos;%PPVC_S_03_Post Pour/Carcass completion%&apos;)) 
        ///			AND (MS.STATUS = 98 OR MS.STATUS = 99) 
        ///			AND LOWER(F.GROUP) LIKE &apos;%casting%&apos; THEN 1 END) AS TOTAL_COMPLETED_MODULE,
        ///	COUNT(DISTINCT MP.NAME) AS TOTAL_MODULES
        ///FROM MODULE_PREFAB MP
        ///FULL OUTER JOIN MODULE_STEP MS ON MS.MODULE_ID = MP.ID
        ///FULL OUTER JOIN STEP S ON MS.STEP_ID = S.ID
        ///FULL OUTER JOIN FLOW F ON S.FLOW_ID = F.ID
        ///FULL OUTER JOIN FORM_TEMPLATE FT ON FT.ID = S.FORM_ID
        ///WHERE
        ///	MP.PRECAST_TYPE [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckPPVCTotalModules {
            get {
                return ResourceManager.GetString("DigicheckPPVCTotalModules", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to -- DigicheckPPVCTotalModulesV2
        ///WITH filtered_modules AS (
        ///    SELECT 
        ///		DISTINCT MP.ID,
        ///		MP.UPDATED_AT
        ///    FROM 
        ///		MODULE_PREFAB MP
        ///    WHERE 
        ///		MP.IS_DELETED IS NOT TRUE
        ///    	AND LOWER(REPLACE(REPLACE(MP.PRECAST_TYPE, &apos; &apos;, &apos;&apos;), &apos;_&apos;, &apos;&apos;)) = LOWER(@PRECASTTYPE_HANDLE)
        ///		AND @WHERECLAUSE
        ///),
        ///filtered_steps AS (
        ///    SELECT 
        ///		DISTINCT MS.MODULE_ID, MS.STATUS, F.ID, S.DASHBOARD_STATUS, F.GROUP_1
        ///    FROM 
        ///		MODULE_STEP MS
        ///    LEFT JOIN STEP S ON MS.STEP_ID = S.ID
        ///	LEFT JOIN FLOW F ON S.FLOW_ID [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckPPVCTotalModulesV2 {
            get {
                return ResourceManager.GetString("DigicheckPPVCTotalModulesV2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT 
        ///	DISTINCT MP.ID, MP.NAME, MP.BLOCK, MP.LEVEL, MP.UNIT, SPLIT_PART(MP.NAME,&apos;-&apos;, 5),
        ///	CASE
        ///		WHEN S.FLOW_ID = @IDFLOWONSITE AND LDS.NAME = &apos;aeInstallation&apos; THEN &apos;installed&apos;
        ///		WHEN S.FLOW_ID = @IDFLOWONSITE AND LDS.NAME = &apos;actualDeliveredSite&apos; THEN &apos;delivered&apos;
        ///		WHEN S.FLOW_ID = @IDFLOWPRESTORAGE AND LDS.NAME = &apos;actualDeliveredFitout&apos; THEN &apos;fitout&apos;
        ///		WHEN S.FLOW_ID = @IDFLOWCASTING AND LDS.NAME = &apos;aeCasting&apos; THEN &apos;casting&apos;
        ///		ELSE &apos;NaN&apos;
        ///	END AS FLOWTYPE,
        ///	CASE
        ///		WHEN S.FLOW_ID = @IDFLOWONSITE  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckProgressTable {
            get {
                return ResourceManager.GetString("DigicheckProgressTable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SELECT MP.BLOCK,
        ///	MP.BLOCK_ID,
        ///	MP.LEVEL,
        ///	MP.LEVEL_ID,
        ///	COUNT(DISTINCT MP.NAME) AS TOTAL_PPVC,
        ///	-- 1. GET CASTING DATA PPVC CASTING S_03_Post Pour/Carcass Completion | S_01_Slab &amp; Wall Reinforcement | S_03_Post Pour/Carcass Completion
        ///	MIN(CASE WHEN LDS.NAME = &apos;asCasting&apos; AND LDS.FLOW_ID = @IDFLOWCASTING THEN (MS.DUE_DATE) END) AS START_DATE_CASTING,
        ///	MAX(CASE WHEN LDS.NAME = &apos;aeCasting&apos; AND LDS.FLOW_ID = @IDFLOWCASTING THEN (MS.DUE_DATE) END) AS END_DATE_CASTING,
        ///	COUNT(CASE WHEN LDS.NAME = &apos;aeCas [rest of string was truncated]&quot;;.
        /// </summary>
        public static string DigicheckProgressTableUnit {
            get {
                return ResourceManager.GetString("DigicheckProgressTableUnit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_TMP (CHECKLIST_ID, PROJECT_ID, TRADE, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, TOTAL_NA, CREATED_AT) as (
        ///	SELECT
        ///		CCD.CHECKLIST_ID,
        ///		CC.PROJECT_ID,
        ///		CC.TRADE,
        ///		COUNT(CASE WHEN CCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		0 AS TOTAL_1ST, -- yes = 
        ///		COUNT(CASE WHEN CCD.CONFORM = 99 THEN 1 END) AS TOTAL_YES,
        ///		0 AS TOTAL_1PLUS,
        ///		COUNT(CASE WHEN CCD.CONFORM = 1 THEN 1 END) AS TOTAL_NA,
        ///		CC.CREATED_AT
        ///	FROM SUBAPP_CC CC
        ///	LEFT JOIN SUBAPP_CC_CHECKLIST_DETAIL CCD ON CC.ID =  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string QAQCCommonGroupByTradeSubTrade {
            get {
                return ResourceManager.GetString("QAQCCommonGroupByTradeSubTrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_TMP (CHECKLIST_ID, PROJECT_ID, TRADE, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, TOTAL_NA, CREATED_AT) as (
        ///	SELECT
        ///		CCD.CHECKLIST_ID,
        ///		CC.PROJECT_ID,
        ///		CC.TRADE,
        ///		COUNT(CASE WHEN CCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		0 AS TOTAL_1ST, -- yes = 
        ///		COUNT(CASE WHEN CCD.CONFORM = 99 THEN 1 END) AS TOTAL_YES,
        ///		0 AS TOTAL_1PLUS,
        ///		COUNT(CASE WHEN CCD.CONFORM = 1 THEN 1 END) AS TOTAL_NA,
        ///		CC.CREATED_AT
        ///	FROM SUBAPP_CC CC
        ///	LEFT JOIN SUBAPP_CC_CHECKLIST_DETAIL CCD ON CC.ID =  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string QAQCCommonGroupByTradeSubTradeChecklist {
            get {
                return ResourceManager.GetString("QAQCCommonGroupByTradeSubTradeChecklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_TMP (CHECKLIST_ID, PROJECT_ID, TRADE, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, TOTAL_NA, CREATED_AT) as (
        ///	SELECT
        ///		CCD.CHECKLIST_ID,
        ///		CC.PROJECT_ID,
        ///		CC.TRADE,
        ///		COUNT(CASE WHEN CCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		0 AS TOTAL_1ST, -- yes = 
        ///		COUNT(CASE WHEN CCD.CONFORM = 99 THEN 1 END) AS TOTAL_YES,
        ///		0 AS TOTAL_1PLUS,
        ///		COUNT(CASE WHEN CCD.CONFORM = 1 THEN 1 END) AS TOTAL_NA,
        ///		CC.CREATED_AT
        ///	FROM SUBAPP_CC CC
        ///	LEFT JOIN SUBAPP_CC_CHECKLIST_DETAIL CCD ON CC.ID =  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string QAQCCommonGroupByTradeSubTradePerMonth {
            get {
                return ResourceManager.GetString("QAQCCommonGroupByTradeSubTradePerMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_TMP (CHECKLIST_ID, PROJECT_ID, TRADE, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, TOTAL_NA, CREATED_AT) as (
        ///	SELECT
        ///		CCD.CHECKLIST_ID,
        ///		CC.PROJECT_ID,
        ///		CC.TRADE,
        ///		COUNT(CASE WHEN CCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		0 AS TOTAL_1ST, -- yes = 
        ///		COUNT(CASE WHEN CCD.CONFORM = 99 THEN 1 END) AS TOTAL_YES,
        ///		0 AS TOTAL_1PLUS,
        ///		COUNT(CASE WHEN CCD.CONFORM = 1 THEN 1 END) AS TOTAL_NA,
        ///		CC.CREATED_AT
        ///	FROM SUBAPP_CC CC
        ///	LEFT JOIN SUBAPP_CC_CHECKLIST_DETAIL CCD ON CC.ID =  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string QAQCCommonGroupByTradeSubTradePerProject {
            get {
                return ResourceManager.GetString("QAQCCommonGroupByTradeSubTradePerProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_TMP (PROJECT_ID, FORM_ID, CHECKLIST_ID, TRADE, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, PROJECTTYPE, MONTH_NAME) as (
        ///	SELECT
        ///		CRC.PROJECT_ID,
        ///		CRC.FORM_ID,
        ///		CRCD.CHECKLIST_ID,
        ///		CRC.TRADE,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		COUNT(CASE WHEN CRCD.CONFORM = 99 THEN 1 END) AS TOTAL_1ST, -- yes = 
        ///		0 AS TOTAL_YES,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 1 THEN 1 END) AS TOTAL_1PLUS, -- pass at 1st
        ///		&apos;QAQC_CRITICAL_CHECK&apos; AS PROJECTTYPE,
        ///		&apos;Summary&apos; AS MON [rest of string was truncated]&quot;;.
        /// </summary>
        public static string QaQcGetCriticalDataProject1 {
            get {
                return ResourceManager.GetString("QaQcGetCriticalDataProject1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_TMP (PROJECT_ID, FORM_ID, CHECKLIST_ID, TRADE, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, PROJECTTYPE, MONTH_NAME) as (
        ///	SELECT
        ///		CRC.PROJECT_ID,
        ///		CRC.FORM_ID,
        ///		CRCD.CHECKLIST_ID,
        ///		CRC.TRADE,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		COUNT(CASE WHEN CRCD.CONFORM = 99 THEN 1 END) AS TOTAL_1ST, -- yes = 
        ///		0 AS TOTAL_YES,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 1 THEN 1 END) AS TOTAL_1PLUS, -- pass at 1st
        ///		&apos;QAQC_CRITICAL_CHECK&apos; AS PROJECTTYPE,
        ///		&apos;Summary&apos; AS MON [rest of string was truncated]&quot;;.
        /// </summary>
        public static string QaQcGetCriticalDataProject2 {
            get {
                return ResourceManager.GetString("QaQcGetCriticalDataProject2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_TMP (PROJECT_ID, FORM_ID, CHECKLIST_ID, TRADE, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, CREATED_AT) as (
        ///	SELECT
        ///		CRC.PROJECT_ID,
        ///		CRC.FORM_ID,
        ///		CRCD.CHECKLIST_ID,
        ///		CRC.TRADE,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		COUNT(CASE WHEN CRCD.CONFORM = 99 THEN 1 END) AS TOTAL_1ST, -- yes = 
        ///		0 AS TOTAL_YES,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 1 THEN 1 END) AS TOTAL_1PLUS,
        ///		CRC.FORM_DATE
        ///	FROM SUBAPP_CRC CRC
        ///	LEFT JOIN SUBAPP_CRC_CHECKLIST_DETAIL CRCD ON C [rest of string was truncated]&quot;;.
        /// </summary>
        public static string QAQCGroupByTradeSubTrade {
            get {
                return ResourceManager.GetString("QAQCGroupByTradeSubTrade", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_TMP (PROJECT_ID, FORM_ID, CHECKLIST_ID, TRADE, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, CREATED_AT) as (
        ///	SELECT
        ///		CRC.PROJECT_ID,
        ///		CRC.FORM_ID,
        ///		CRCD.CHECKLIST_ID,
        ///		CRC.TRADE,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		COUNT(CASE WHEN CRCD.CONFORM = 99 THEN 1 END) AS TOTAL_1ST, -- yes = 
        ///		0 AS TOTAL_YES,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 1 THEN 1 END) AS TOTAL_1PLUS,
        ///		CRC.FORM_DATE
        ///	FROM SUBAPP_CRC CRC
        ///	LEFT JOIN SUBAPP_CRC_CHECKLIST_DETAIL CRCD ON C [rest of string was truncated]&quot;;.
        /// </summary>
        public static string QAQCGroupByTradeSubTradeChecklist {
            get {
                return ResourceManager.GetString("QAQCGroupByTradeSubTradeChecklist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_TMP (PROJECT_ID, FORM_ID, CHECKLIST_ID, TRADE, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, CREATED_AT) as (
        ///	SELECT
        ///		CRC.PROJECT_ID,
        ///		CRC.FORM_ID,
        ///		CRCD.CHECKLIST_ID,
        ///		CRC.TRADE,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		COUNT(CASE WHEN CRCD.CONFORM = 99 THEN 1 END) AS TOTAL_1ST, -- yes = 
        ///		0 AS TOTAL_YES,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 1 THEN 1 END) AS TOTAL_1PLUS,
        ///		CRC.FORM_DATE
        ///	FROM SUBAPP_CRC CRC
        ///	LEFT JOIN SUBAPP_CRC_CHECKLIST_DETAIL CRCD ON C [rest of string was truncated]&quot;;.
        /// </summary>
        public static string QAQCGroupByTradeSubTradePerMonth {
            get {
                return ResourceManager.GetString("QAQCGroupByTradeSubTradePerMonth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH RESULT_TMP (PROJECT_ID, FORM_ID, CHECKLIST_ID, TRADE, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, PROJECTTYPE, MONTH_NAME, CREATED_AT) as (
        ///	SELECT
        ///		CRC.PROJECT_ID,
        ///		CRC.FORM_ID,
        ///		CRCD.CHECKLIST_ID,
        ///		CRC.TRADE,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		COUNT(CASE WHEN CRCD.CONFORM = 99 THEN 1 END) AS TOTAL_1ST, -- yes = 
        ///		0 AS TOTAL_YES,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 1 THEN 1 END) AS TOTAL_1PLUS, -- pass at 1st
        ///		&apos;QAQC_CRITICAL_CHECK&apos; AS PROJECTTYPE,
        ///		&apos;Sum [rest of string was truncated]&quot;;.
        /// </summary>
        public static string QAQCGroupByTradeSubTradePerProject {
            get {
                return ResourceManager.GetString("QAQCGroupByTradeSubTradePerProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (WITH RESULT_TMP (PROJECT_ID, FORM_ID, TOTAL_NO, TOTAL_1ST, TOTAL_YES, TOTAL_1PLUS, PROJECTTYPE, MONTH_NAME) as (
        ///	SELECT
        ///		CRC.PROJECT_ID,
        ///		CRC.FORM_ID,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 0 THEN 1 END) AS TOTAL_NO, -- no
        ///		COUNT(CASE WHEN CRCD.CONFORM = 99 THEN 1 END) AS TOTAL_1ST, -- yes = 
        ///		0 AS TOTAL_YES,
        ///		COUNT(CASE WHEN CRCD.CONFORM = 1 THEN 1 END) AS TOTAL_1PLUS, -- pass at 1st
        ///		&apos;QAQC_CRITICAL_CHECK&apos; AS PROJECTTYPE,
        ///		&apos;Summary&apos; AS MONTH_NAME
        ///	FROM SUBAPP_CRC CRC
        ///	LEFT JOIN SUBAPP_CRC_CHE [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryCriticalCommonDigicheck {
            get {
                return ResourceManager.GetString("SummaryCriticalCommonDigicheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to WITH TEMP_RESULT_REWORK (TRADE, MONTH) AS ( SELECT
        ///        TRADE,
        ///        DATE_TRUNC(&apos;MONTH&apos;, UPDATED_AT) AS month
        ///    FROM
        ///        SUBAPP_REWORK
        ///	WHERE SUBAPP_REWORK.IS_DELETED IS NOT TRUE
        ///		  AND SUBAPP_REWORK.IS_REJECTED IS NOT TRUE 
        ///    GROUP BY
        ///        TRADE,
        ///        DATE_TRUNC(&apos;MONTH&apos;, UPDATED_AT)
        ///    HAVING 
        ///        COUNT(ID) FILTER (WHERE STATUS = 5) &lt; 2
        ///    ORDER BY
        ///        TRADE,
        ///        MONTH
        ///),
        ///TEMP_RESULT_DEFECT AS (
        ///    SELECT 
        ///        &apos;Defects&apos; AS Project,
        ///        COUNT(*)  [rest of string was truncated]&quot;;.
        /// </summary>
        public static string SummaryReworkDefect {
            get {
                return ResourceManager.GetString("SummaryReworkDefect", resourceCulture);
            }
        }
    }
}
